{"ast":null,"code":"var _jsxFileName = \"/Users/josesilva/Documents/Projetos/dragonApp/src/components/LoginPage/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  setAuthenticated\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    // Simule a autenticação, você pode substituir isso por uma chamada à API\n    if (username === \"Admin\" && password === \"Pass@2023\") {\n      // Se autenticado, atualize o estado de autenticação\n      setAuthenticated(true);\n      // Navegue para a página de DragonListPage\n      navigate(\"/dragons\");\n    } else {\n      // Trate o caso de credenciais inválidas\n      alert(\"Credenciais inválidas\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","S","jsxDEV","_jsxDEV","LoginPage","setAuthenticated","_s","username","setUsername","password","setPassword","navigate","handleLogin","alert","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/josesilva/Documents/Projetos/dragonApp/src/components/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styles\";\n\ninterface LoginPageProps {\n  setAuthenticated: (value: boolean) => void;\n}\n\nconst LoginPage: React.FC<LoginPageProps> = ({ setAuthenticated }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    // Simule a autenticação, você pode substituir isso por uma chamada à API\n    if (username === \"Admin\" && password === \"Pass@2023\") {\n      // Se autenticado, atualize o estado de autenticação\n      setAuthenticated(true);\n      // Navegue para a página de DragonListPage\n      navigate(\"/dragons\");\n    } else {\n      // Trate o caso de credenciais inválidas\n      alert(\"Credenciais inválidas\");\n    }\n  };\n\n  return (\n    <S.Container>\n      <h2>Login Page</h2>\n      <label>\n        Username:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </label>\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </label>\n      <button onClick={handleLogin}>Login</button>\n    </S.Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIL,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,WAAW,EAAE;MACpD;MACAJ,gBAAgB,CAAC,IAAI,CAAC;MACtB;MACAM,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,MAAM;MACL;MACAE,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACEV,OAAA,CAACF,CAAC,CAACa,SAAS;IAAAC,QAAA,gBACVZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAY,QAAA,GAAO,WAEL,eAAAZ,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRhB,OAAA;MAAAY,QAAA,GAAO,WAEL,eAAAZ,OAAA;QACEiB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEZ,QAAS;QAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRhB,OAAA;MAAQsB,OAAO,EAAEb,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAElB,CAAC;AAACb,EAAA,CAxCIF,SAAmC;EAAA,QAGtBJ,WAAW;AAAA;AAAA0B,EAAA,GAHxBtB,SAAmC;AA0CzC,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}