{"ast":null,"code":"var _jsxFileName = \"/Users/josesilva/Documents/Projetos/dragonApp/src/components/DragonFormModal/DragonFormModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/DragonFormModal/DragonFormModal.tsx\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragonFormModal = ({\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const handleSave = () => {\n    onSave(name, type);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    contentLabel: \"Add Dragon\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Dragon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: type,\n          onChange: e => setType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(DragonFormModal, \"vWrEL7ZpWpnXZxZerMxaSpbtmvo=\");\n_c = DragonFormModal;\nexport default DragonFormModal;\nvar _c;\n$RefreshReg$(_c, \"DragonFormModal\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","DragonFormModal","isOpen","onClose","onSave","_s","name","setName","type","setType","handleSave","onRequestClose","contentLabel","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/josesilva/Documents/Projetos/dragonApp/src/components/DragonFormModal/DragonFormModal.tsx"],"sourcesContent":["// src/components/DragonFormModal/DragonFormModal.tsx\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\n\ninterface DragonFormModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (name: string, type: string) => void;\n}\n\nconst DragonFormModal: React.FC<DragonFormModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n}) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const handleSave = () => {\n    onSave(name, type);\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onClose} contentLabel=\"Add Dragon\">\n      <h2>Add Dragon</h2>\n      <form>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </label>\n        <label>\n          Type:\n          <input\n            type=\"text\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n          />\n        </label>\n        <button type=\"button\" onClick={handleSave}>\n          Save\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default DragonFormModal;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhC,MAAMC,eAA+C,GAAGA,CAAC;EACvDC,MAAM;EACNC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBN,MAAM,CAACE,IAAI,EAAEE,IAAI,CAAC;IAClBL,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEH,OAAA,CAACF,KAAK;IAACI,MAAM,EAAEA,MAAO;IAACS,cAAc,EAAER,OAAQ;IAACS,YAAY,EAAC,YAAY;IAAAC,QAAA,gBACvEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAO,OAEL,eAAAb,OAAA;UACEQ,IAAI,EAAC,MAAM;UACXU,KAAK,EAAEZ,IAAK;UACZa,QAAQ,EAAGC,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjB,OAAA;QAAAa,QAAA,GAAO,OAEL,eAAAb,OAAA;UACEQ,IAAI,EAAC,MAAM;UACXU,KAAK,EAAEV,IAAK;UACZW,QAAQ,EAAGC,CAAC,IAAKX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjB,OAAA;QAAQQ,IAAI,EAAC,QAAQ;QAACc,OAAO,EAAEZ,UAAW;QAAAG,QAAA,EAAC;MAE3C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACZ,EAAA,CAvCIJ,eAA+C;AAAAsB,EAAA,GAA/CtB,eAA+C;AAyCrD,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}